{%- comment -%}
------------------------------------------------------------------------------------------------------------------------
CSS
------------------------------------------------------------------------------------------------------------------------
{%- endcomment -%}
<style>
  {%- if section.settings.controls_type == 'filled_arrows' -%}
    {%- assign controls_background = section.blocks.first.settings.button_background -%}
    {%- assign controls_color = section.blocks.first.settings.button_text_color -%}
  {%- else -%}
    {%- assign controls_color = section.blocks.first.settings.text_color -%}
  {%- endif -%}

  #shopify-section-{{ section.id }} {
    --slideshow-background: {{ section.blocks.first.settings.background_gradient | default: section.blocks.first.settings.background | default: section.settings.background_gradient | default: section.settings.background }};
    --slideshow-controls-background: {{ controls_background.rgb }};
    --slideshow-controls-color: {{ controls_color.rgb }};

    {%- if section.settings.allow_transparent_header -%}
      margin-block-start: calc(-1 * var(--header-height) * var(--section-is-first));
    {%- endif -%}
  }

  {%- for block in section.blocks -%}
    #block-{{ block.id }} {
      {%- if section.settings.controls_type == 'filled_arrows' -%}
        {%- assign controls_background = block.settings.button_background -%}
        {%- assign controls_color = block.settings.button_text_color -%}
      {%- else -%}
        {%- assign controls_color = block.settings.text_color -%}
      {%- endif -%}

      --slideshow-slide-background: {{ block.settings.background_gradient | default: block.settings.background | default: section.settings.background_gradient | default: section.settings.background }};
      --slideshow-slide-controls-background: {{ controls_background.rgb }};
      --slideshow-slide-controls-color: {{ controls_color.rgb }};
    }

   {% assign block_class = block.type | append: "-" | append: block.id %}

    {{ section.settings.font_family_head | font_face: font_display: 'fallback' }}
      .{{ block_class }} h1, .{{ block_class }} h2, .{{ block_class }} h3, .{{ block_class }} h4 {
        {%- if section.settings.font_family_head != blank -%}
          font-family: {{ section.settings.font_family_head.family }}, {{ section.settings.font_family_head.fallback_families }};
          --heading-font-family: {{ section.settings.font_family_head.family }}, {{ section.settings.font_family_head.fallback_families }};
        {% endif %}
    }

    {{ section.settings.font_family_sub | font_face: font_display: 'fallback' }}
      .{{ block_class }} h5, .{{ block_class }} h6 {
        {%- if section.settings.font_family_sub != blank -%}
          font-family: {{ section.settings.font_family_sub.family }}, {{ section.settings.font_family_sub.fallback_families }};
          --heading-font-family: {{ section.settings.font_family_sub.family }}, {{ section.settings.font_family_sub.fallback_families }};
        {% endif %}
    }

    {{ section.settings.font_family_par | font_face: font_display: 'fallback' }}
      .{{ block_class }} p {
        {%- if section.settings.font_family_par != blank -%}
          font-family: {{ section.settings.font_family_par.family }}, {{ section.settings.font_family_par.fallback_families }};
          --heading-font-family: {{ section.settings.font_family_par.family }}, {{ section.settings.font_family_par.fallback_families }};
        {% endif %}
    }

    {{ section.settings.font_family_italic | font_face: font_display: 'fallback' }}  
       .{{ block_class }} i, .{{ block_class }} em {
          {%- if section.settings.font_family_italic != blank -%}
            font-family: {{ section.settings.font_family_italic.family }}, {{ section.settings.font_family_italic.fallback_families }};
          {% endif %}
    }

      {%- if block.settings.button_1_text != blank -%}
        {% assign cls1 = block.id | append: "-button-1" %}
        {%- render 'button-styles', class: cls1, 
        background_gradient: block.settings.button_1_background_gradient,
        background: block.settings.button_1_background,
        text_color: block.settings.button_1_text_color,
        border_color: block.settings.button_1_border_color,
        border_width: block.settings.button_1_border_width,
        border_radius: block.settings.button_1_border_radius,
        background_hovered: block.settings.button_1_background_hovered,
        text_color_hovered: block.settings.button_1_text_color_hovered, 
        background_gradient_hovered: block.settings.button_1_background_gradient_hovered,
        border_color_hovered: block.settings.button_1_border_color_hovered,
        width_button: block.settings.button_1_width_button,
        -%}
      {%- endif -%}

      {%- if block.settings.button_2_text != blank -%}
        {% assign cls2 = block.id | append: "-button-2" %}
        {%- render 'button-styles', class: cls2, 
        background_gradient: block.settings.button_2_background_gradient,
        background: block.settings.button_2_background,
        text_color: block.settings.button_2_text_color,
        border_color: block.settings.button_2_border_color,
        border_width: block.settings.button_2_border_width,
        border_radius: block.settings.button_2_border_radius,
        background_hovered: block.settings.button_2_background_hovered,
        text_color_hovered: block.settings.button_2_text_color_hovered, 
        background_gradient_hovered: block.settings.button_2_background_gradient_hovered,
        border_color_hovered: block.settings.button_2_border_color_hovered,
        width_button: block.settings.button_1_width_button,
        -%}
     {%- endif -%}

     {% assign block_styles = "block_styles" | append: block.id %}
        {%- render 'block-styles', class: block_styles, 
          border_width: block.settings.border_width,
          border_color: block.settings.border_color,
          block_background: block.settings.block_background,
          block_background_gradient: block.settings.block_background_gradient,
          border_radius: block.settings.border_radius,
          border_padding: block.settings.content_width -%}
    
  {%- endfor -%}

</style>

{%- comment -%}
------------------------------------------------------------------------------------------------------------------------
LIQUID
------------------------------------------------------------------------------------------------------------------------
{%- endcomment -%}

{%- assign slideshow_id = 'slideshow-' | append: section.id -%}

<x-slideshow class="slideshow {% unless section.settings.full_width %}slideshow--boxed{% endunless %} {% if section.blocks.size > 1 %}slideshow--multiple-slides{% endif %}" {% if section.settings.allow_transparent_header %}allow-transparent-header{% endif %}>
  {%- unless section.settings.full_width -%}
    <span class="slideshow__slide-background"></span>
  {%- endunless -%}

  <slideshow-carousel id="{{ slideshow_id }}" class="slideshow__carousel" reveal-on-scroll="true" selector=".slideshow__slide" transition="{{ section.settings.transition_type }}" {% if section.settings.autoplay %}autoplay="{{ section.settings.cycle_speed }}"{% endif %} role="region">
    {%- unless section.blocks.size == 1 or section.settings.controls_type contains 'arrows' -%}
      <custom-cursor class="slideshow__cursor circle-button circle-button--lg circle-button--fill" aria-hidden="true">
        {%- render 'icon' with 'chevron-right' -%}

        <svg class="slideshow__cursor-ring" viewBox="-28 -28 56 56" width="56" height="56" fill="none" stroke="currentColor" stroke-width="2">
          <circle r="27" stroke-dasharray="158.33626974092556" stroke-dashoffset="158.33626974092556px"></circle>
        </svg>
      </custom-cursor>
    {%- endunless -%}

    {%- for block in section.blocks -%}
      {%- capture slide -%}
        <div class="content-over-media content-over-media--{{ section.settings.image_size }} {% unless section.settings.full_width %}rounded{% endunless %}" style="--content-over-media-content-max-width: {{ block.settings.content_max_width }}px; --content-over-media-overlay: {{ block.settings.overlay_color.rgb }} / {{ block.settings.overlay_opacity | divided_by: 100.0 }}">
          {%- comment -%}---------------- MEDIA ----------------{%- endcomment -%}
          {%- capture sizes -%}{% if section.settings.full_width %}100vw{% else %}min({{ settings.page_width }}px, 100vw){% endif %}{%- endcapture -%}

          {%- if block.settings.image != blank -%}
            {%- capture loading_strategy -%}{% if forloop.first %}eager{% else %}lazy{% endif %}{%- endcapture -%}
            {%- capture fetch_priority -%}{% if forloop.first %}high{% else %}low{% endif %}{%- endcapture -%}

            {%- if block.settings.mobile_image == blank -%}
              {{- block.settings.image | image_url: width: block.settings.image.width | image_tag: loading: loading_strategy, fetchpriority: fetch_priority, sizes: sizes, widths: '200,300,400,500,600,700,800,900,1000,1200,1400,1600,1800,2000,2200,2400,2600,2800,3000,3200' -}}
            {%- else -%}
              {{- block.settings.image | image_url: width: block.settings.image.width | image_tag: loading: loading_strategy, fetchpriority: fetch_priority, sizes: sizes, widths: '200,300,400,500,600,700,800,900,1000,1200,1400,1600,1800,2000,2200,2400,2600,2800,3000,3200', class: 'hidden sm:block' -}}
              {{- block.settings.mobile_image | image_url: width: block.settings.mobile_image.width | image_tag: loading: loading_strategy, fetchpriority: fetch_priority, sizes: sizes, widths: '200,300,400,500,600,700,800,900,1000,1200,1400,1600,1800,2000,2200,2400,2600,2800,3000,3200', class: 'sm:hidden' -}}
            {%- endif -%}
          {%- else -%}
            {%- capture placeholder_image -%}{% cycle 'placeholder': 'lifestyle-1', 'lifestyle-2' %}{%- endcapture -%}
            {{- placeholder_image | placeholder_svg_tag: 'placeholder' | replace: '<svg', '<svg preserveAspectRatio="xMinYMin slice"' -}}
          {%- endif -%}

          {%- comment -%}---------------- CONTENT ----------------{%- endcomment -%}
          {% assign padding_text = block.settings.padding_text %}
          {% assign block_styles = "block_styles" | append: block.id %}
          {%- capture content_class -%}{{ block.settings.mobile_text_position }} {{ block.settings.desktop_text_position }}{%- endcapture -%}
            
          <div {% render 'surface', class: content_class, text_color: block.settings.text_color, style: 'padding-bottom: 25px;' %}>
             <div class="{{ block_styles }} contact-form">
              {%- if block.settings.content2 != blank -%}
              {% assign richtextId2 = "richtext2-" | append: block.id %}
              <div
                id="{{ richtextId2 }}"
                class="{{ block.type }}-{{ block.id }}"
                style="padding-bottom: {{ padding_text }}px;"
                {{ block.shopify_attributes }}>
                {{- block.settings.content2 -}}
              </div>
              {%- endif -%}

              {%- if block.settings.content3 != blank -%}
              {% assign richtextId3 = "richtext3-" | append: block.id %}
              <div
                id="{{ richtextId3 }}"
                class="{{ block.type }}-{{ block.id }}"
                style="padding-bottom: {{ padding_text }}px; color: #ff0000;"
                {{ block.shopify_attributes }}>
                {{- block.settings.content3 -}}
              </div>
              {%- endif -%}
              {%- if block.settings.richtext != blank -%}
                {% assign richtextId = "richtext-" | append: block.id %}
                <div style="padding-bottom: {{ padding_text }}px;" id="{{ richtextId }}" class="{{ block.type }}-{{ block.id }}" {{ block.shopify_attributes }}>
                  {{- block.settings.richtext -}}
                </div>  
              {%- endif -%}

              {%- assign button_1_length = block.settings.button_1_text | size -%}
              {%- assign button_2_length = block.settings.button_2_text | size -%}

              {%- if button_1_length >= button_2_length -%}
                  {%- assign button_width = button_1_length | times: 18 | append: 'px' -%}
              {%- else -%}
                  {%- assign button_width = button_2_length | times: 18 | append: 'px' -%}
              {%- endif -%}

                {%- if block.settings.button_1_text != blank -%}
                {%- assign padding_right = block.settings.button_1_padding -%}
                <div>
                <div style="display: inline-block; padding-right: {{ padding_right }}px;">
                {% assign cls1 = block.id | append: "-button-1" %}
                {%- render 'button', href: block.settings.button_1_link, icon_reverse: block.settings.button_1_icon_reverse, icon: block.settings.icon, content: block.settings.button_1_text, 
                    size: 'l', width_button: button_width, class: cls1
                -%}
                </div>
                {%- endif -%}

                {%- if block.settings.button_2_text != blank -%}
               
                <div style="display: inline-block;">
                {% assign cls2 = block.id | append: "-button-2" %}
                {%- render 'button', href: block.settings.button_2_link, icon_reverse: block.settings.button_2_icon_reverse, icon: block.settings.icon2, content: block.settings.button_2_text, 
                    size: 'l', width_button: button_width, class: cls2
                -%}
                </div>
                </div>
                {%- endif -%}
        
            </div>
          </div>
         </div>
        </div>
        </div>
      {%- endcapture -%}

      {%- if block.settings.button_link != blank and block.settings.button_text == blank -%}
        <a id="block-{{ block.id }}" href="{{ block.settings.button_link }}" class="slideshow__slide {% if forloop.first %}is-selected{% endif %}" role="group" {{ block.shopify_attributes }}>
          {{- slide -}}
        </a>
      {%- else -%}
        <div id="block-{{ block.id }}" class="slideshow__slide {% if forloop.first %}is-selected{% endif %}" role="group" {{ block.shopify_attributes }}>
          {{- slide -}}
        </div>
      {%- endif -%}
    {%- endfor -%}

    {%- if section.blocks.size > 1 and section.settings.controls_type != 'none' -%}
      <div class="slideshow__controls {% if section.settings.position_dots == 'center' %}slideshow__controls_center {% elsif section.settings.position_dots == 'start' %}slideshow__controls_left {% else %}slideshow__controls_right {% endif %}">
        
        {%- case section.settings.controls_type -%}
          {%- when 'filled_arrows' -%}
            <div class="prev-next-buttons">
              <button style="background-color: {{ section.settings.color_dots }};" is="prev-button" aria-controls="{{ slideshow_id }}" class="circle-button circle-button--sm {% if section.settings.controls_type == 'filled_arrows' %}circle-button--fill{% else %}circle-button--bordered{% endif %} group">
                <span class="sr-only">{{ 'general.accessibility.previous' | t }}</span>
                <span class="animated-arrow animated-arrow--reverse"></span>
              </button>

              <button style="background-color: {{ section.settings.color_dots }}" is="next-button" aria-controls="{{ slideshow_id }}" class="circle-button circle-button--sm {% if section.settings.controls_type == 'filled_arrows' %}circle-button--fill{% else %}circle-button--bordered{% endif %} group">
                <span class="sr-only">{{ 'general.accessibility.next' | t }}</span>
                <span class="animated-arrow"></span>
              </button>
            </div>

            {%- when 'outline_arrows' -%}
            <div class="prev-next-buttons">
              <button style="color: {{ section.settings.color_dots }}" is="prev-button" aria-controls="{{ slideshow_id }}" class="circle-button circle-button--sm {% if section.settings.controls_type == 'filled_arrows' %}circle-button--fill{% else %}circle-button--bordered{% endif %} group">
                <span style="color: {{ section.settings.color_dots }}" class="sr-only">{{ 'general.accessibility.previous' | t }}</span>
                <span style="color: {{ section.settings.color_dots }}" class="animated-arrow animated-arrow--reverse"></span>
              </button>

              <button style="color: {{ section.settings.color_dots }}" is="next-button" aria-controls="{{ slideshow_id }}" class="circle-button circle-button--sm {% if section.settings.controls_type == 'filled_arrows' %}circle-button--fill{% else %}circle-button--bordered{% endif %} group">
                <span style="color: {{ section.settings.color_dots }}" class="sr-only">{{ 'general.accessibility.next' | t }}</span>
                <span style="color: {{ section.settings.color_dots }}" class="animated-arrow"></span>
              </button>
            </div>

          {%- when 'numbers' -%}
            <page-dots class="numbered-dots" aria-controls="{{ slideshow_id }}">
              {%- for i in (1..section.blocks.size) -%}
                <button type="button" class="numbered-dots__item" aria-current="{% if forloop.first %}true{% else %}false{% endif %}">
                  <svg style="color: {{ section.settings.color_dots }}" width="100%" height="100%" {% if section.settings.autoplay %}style="--percent: 0"{% endif %}>
                    <circle  cx="50%" cy="50%" r="15"></circle>
                    <circle cx="50%" cy="50%" r="15"></circle>
                  </svg>

                  <span style="color: {{ section.settings.color_dots }}">{{- forloop.index -}}</span>
                </button>
              {%- endfor -%}
            </page-dots>

          {%- when 'stretching-dots' -%}
            <page-dots class="stretching-dots" aria-controls="{{ slideshow_id }}">
              {%- for i in (1..section.blocks.size) -%}
                <button style="background-color: {{ section.settings.color_dots }}" type="button" class="tap-area" aria-current="{% if forloop.first %}true{% else %}false{% endif %}">
                  <span class="sr-only">{{ 'general.accessibility.go_to_item' | t: index: forloop.index }}</span>
                </button>
              {%- endfor -%}
            </page-dots>

          {%- when 'normal-dots' -%}
            <page-dots class="normal-dots" aria-controls="{{ slideshow_id }}">
              {%- for i in (1..section.blocks.size) -%}
                <button style="background-color: {{ section.settings.color_dots }}" type="button" class="tap-area" aria-current="{% if forloop.first %}true{% else %}false{% endif %}">
                  <span class="sr-only">{{ 'general.accessibility.go_to_item' | t: index: forloop.index }}</span>
                </button>
              {%- endfor -%}
            </page-dots>
        {%- endcase -%}
      </div>
    {%- endif -%}
  </slideshow-carousel>
</x-slideshow>

{% schema %}
{
  "name": "Slideshow",
  "class": "shopify-section--slideshow",
  "tag": "section",
  "disabled_on": {
    "groups": ["header", "custom.overlay"]
  },
  "max_blocks": 5,
  "settings": [
    {
      "type": "header",
      "content": "Layout Settings"
    },
    {
      "type": "checkbox",
      "id": "full_width",
      "label": "Full width",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "allow_transparent_header",
      "label": "Allow transparent header",
      "info": "This setting only applies when this section is the first one.",
      "default": true
    },
    {
      "type": "select",
      "id": "image_size",
      "label": "Image size",
      "options": [
        {
          "value": "auto",
          "label": "Original image ratio"
        },
        {
          "value": "sm",
          "label": "Small"
        },
        {
          "value": "md",
          "label": "Medium"
        },
        {
          "value": "lg",
          "label": "Large"
        },
        {
          "value": "fill",
          "label": "Fill screen height"
        }
      ],
      "info": "Choose \"Original image ratio\" to not cut images. [Learn more](https://help.shopify.com/en/manual/online-store/images/theme-images#best-practices-for-slideshows-and-full-width-images)",
      "default": "auto"
    },
    {
      "type": "select",
      "id": "transition_type",
      "label": "Transition type",
      "options": [
        {
          "value": "fade",
          "label": "Fade"
        },
        {
          "value": "fade_with_text",
          "label": "Fade with text transition"
        }
      ],
      "default": "fade_with_text"
    },
    {
      "type": "header",
      "content": "Slide Controls"
    },
    {
      "type": "select",
      "id": "controls_type",
      "label": "Controls",
      "options": [
        {
          "value": "none",
          "label": "None"
        },
        {
          "value": "filled_arrows",
          "label": "Filled arrows"
        },
        {
          "value": "outline_arrows",
          "label": "Outline arrows"
        },
        {
          "value": "numbers",
          "label": "Numbers"
        },
        {
          "value": "stretching-dots",
          "label": "Stretching dots"
        },
        {
          "value": "normal-dots",
          "label": "Normal dots"
        }
      ],
      "default": "normal-dots"
    },
    {
      "type": "header",
      "content": "Dot Controls"
    },
    {
      "type": "color",
      "id": "color_dots",
      "label": "Color dots"
    },
    {
      "type": "select",
      "id": "position_dots",
      "label": "Positions dots",
      "options": [
        {
          "value": "start",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Middle"
        },
        {
          "value": "end",
          "label": "Right"
        }
      ],
      "default": "end"
    },
    {
      "type": "checkbox",
      "id": "autoplay",
      "label": "Auto rotate between slides",
      "default": false
    },
    {
      "type": "range",
      "id": "cycle_speed",
      "min": 4,
      "max": 20,
      "step": 1,
      "unit": "sec",
      "label": "Change slides every",
      "default": 6
    },
    {
      "type": "header",
      "content": "Fonts"
    },
    {
      "type": "font_picker",
      "id": "font_family_sub",
      "label": "Choose a Font for Subheadings (h5, h6)",
      "default": "helvetica_n4"
    },
    {
      "type": "font_picker",
      "id": "font_family_head",
      "label": "Choose a Font for Headings (h1, h2, h3, h4)",
      "info": "(h1, h2, h3, h4)",
      "default": "helvetica_n4"
    },
    {
      "type": "font_picker",
      "id": "font_family_par",
      "label": "Choose a Font for Paragraphs / Buttons",
      "default": "helvetica_n4"
    },
    {
      "type": "font_picker",
      "id": "font_family_italic",
      "label": "Choose a Font for Italic texte",
      "default": "helvetica_n4"
    }
  ],
  "blocks": [
    {
    "type": "image",
    "name": "Image",
    "settings": [
      {
        "type": "header",
        "content": "Image Settings",
        "info": "Choose images for different devices"
      },
      {
        "type": "image_picker",
        "id": "image",
        "info": "2800 x 1000px .jpg recommended",
        "label": "Desktop image"
      },
      {
        "type": "image_picker",
        "id": "mobile_image",
        "label": "Mobile image",
        "info": "1200 x 1600px .jpg recommended"
      },
      {
        "type": "header",
        "content": "Overlay Settings",
        "info": "Adjust the overlay of the image"
      },
      {
        "type": "color",
        "id": "overlay_color",
        "label": "Image overlay",
        "default": "#000000"
      },
      {
        "type": "range",
        "id": "overlay_opacity",
        "label": "Overlay opacity",
        "min": 0,
        "max": 100,
        "step": 1,
        "unit": "%",
        "default": 30
      },
      {
        "type": "header",
        "content": "Content Appearance",
        "info": "Modify the look and feel of content within the section"
      },
      {
        "type": "color",
        "id": "block_background",
        "label": "Background"
      },
      {
        "type": "color_background",
        "id": "block_background_gradient",
        "label": "Background gradient"
      },
      {
        "type": "range",
        "id": "border_width",
        "label": "Border width",
        "min": 0,
        "max": 5,
        "step": 0.5,
        "default": 0
      },
      {
        "type": "range",
        "id": "border_radius",
        "label": "Border radius",
        "min": 0,
        "max": 50,
        "step": 1,
        "default": 25
      },
      {
        "type": "color",
        "id": "border_color",
        "label": "Border color"
      },
      {
        "type": "range",
        "id": "content_max_width",
        "label": "Content maximum width",
        "min": 400,
        "max": 1200,
        "step": 20,
        "unit": "px",
        "default": 780
      },
      {
        "type": "range",
        "id": "padding_text",
        "label": "Space beetwen text",
        "default": 2,
        "min": 0,
        "max": 20,
        "step": 2,
        "unit": "px"
      },
      {
        "type": "header",
        "content": "Content Positioning",
        "info": "Set the position of the text for mobile and desktop views"
      },
        {
          "type": "select",
          "id": "mobile_text_position",
          "label": "Mobile content position",
          "options": [
            {
              "value": "place-self-start text-start",
              "label": "Top left"
            },
            {
              "value": "place-self-start-center text-center",
              "label": "Top center"
            },
            {
              "value": "place-self-start-end text-end",
              "label": "Top right"
            },
            {
              "value": "place-self-center-start text-start",
              "label": "Middle left"
            },
            {
              "value": "place-self-center text-center",
              "label": "Middle center"
            },
            {
              "value": "place-self-center-end text-end",
              "label": "Middle right"
            },
            {
              "value": "place-self-end-start text-start",
              "label": "Bottom left"
            },
            {
              "value": "place-self-end-center text-center",
              "label": "Bottom center"
            }
          ],
          "default": "place-self-center text-center"
        },
        {
          "type": "select",
          "id": "desktop_text_position",
          "label": "Desktop content position",
          "options": [
            {
              "value": "sm:place-self-start sm:text-start",
              "label": "Top left"
            },
            {
              "value": "sm:place-self-start-center sm:text-center",
              "label": "Top center"
            },
            {
              "value": "sm:place-self-start-end sm:text-end",
              "label": "Top right"
            },
            {
              "value": "sm:place-self-center-start sm:text-start",
              "label": "Middle left"
            },
            {
              "value": "sm:place-self-center sm:text-center",
              "label": "Middle center"
            },
            {
              "value": "sm:place-self-center-end sm:text-end",
              "label": "Middle right"
            },
            {
              "value": "sm:place-self-end-start sm:text-start",
              "label": "Bottom left"
            },
            {
              "value": "sm:place-self-end-center sm:text-center",
              "label": "Bottom center"
            }
          ],
          "default": "sm:place-self-center sm:text-center"
        },
        {
            "type": "header",
            "content": "Text Settings",
            "info": "Settings related to text elements on the slide."
        },
        {
            "type": "color",
            "id": "text_color",
            "label": "General Text Color",
            "default": "#ffffff"
        },
        {
            "type": "richtext",
            "id": "content3",
            "label": "Main Heading",
            "default": "<h1>Slide title</h1>"
        },
        {
            "type": "richtext",
            "id": "content2",
            "label": "Subheading",
            "default": "<h6>Tell your story</h6>"
        },
        {
            "type": "richtext",
            "id": "richtext",
            "label": "Description Paragraph",
            "default": "<p>Buy our new product that <i>is</i> so much wonderful, you will not regret it</p>"
        },
        {
          "type": "header",
          "content": "Slideshow Buttons",
         "info": "Customize the appearance and behavior of the buttons in the slideshow. Adjust text, colors, borders, and more for each button individually."
        },
        {
          "id": "button_1_padding",
          "label": "Space beetwen buttons",
          "type": "range",
          "min": 0,
          "max": 30,
          "step": 1,
          "default": 0,
          "unit": "px"
        },
        {
          "type": "header",
          "content": "Button 1 Settings",
          "info": "Customize the appearance and behavior of the first button."
        },
        {
          "type": "text",
          "id": "button_1_text",
          "label": "Text"
        },
        {
          "type": "url",
          "id": "button_1_link",
          "label": "Link",
          "info": "Leave the button text empty to make the slide fully clickable."
        },
        {
          "type": "header",
          "content": "Button 1 Colors",
          "info": "Define colors and gradients for normal and hover states."
        },
        {
          "type": "color",
          "id": "button_1_text_color",
          "label": "Text Color",
          "default": "#000000"
        },
        {
          "type": "color",
          "id": "button_1_text_color_hovered",
          "label": "Text Color (Hover)"
        },
        {
          "type": "color",
          "id": "button_1_background",
          "label": "Background Color",
          "default": "#ffffff"
        },
        {
          "type": "color",
          "id": "button_1_background_hovered",
          "label": "Background Color (Hover)"
        },
        {
          "type": "color_background",
          "id": "button_1_background_gradient",
          "label": "Background Gradient"
        },
        {
          "type": "color_background",
          "id": "button_1_background_gradient_hovered",
          "label": "Background Gradient (Hover)"
        },
        {
          "type": "color",
          "id": "button_1_border_color",
          "label": "Border Color",
          "default": "#000000"
        },
        {
          "type": "color",
          "id": "button_1_border_color_hovered",
          "label": "Border Color (Hover)"
        },
        {
          "type": "header",
          "content": "Button 1 Styling",
          "info": "Adjust button appearance."
        },
        {
            "type": "select",
            "id": "icon",
            "label": "Icon",
            "options": [
              {
                "value": "none",
                "label": "None"
              },
              {
                "value": "picto-coupon",
                "label": "Coupon",
                "group": "Shop"
              },
              {
                "value": "picto-percent",
                "label": "Percent",
                "group": "Shop"
              },
              {
                "value": "picto-gift",
                "label": "Gift",
                "group": "Shop"
              }, {
                "value": "picto-star",
                "label": "Star",
                "group": "Shop"
              }, {
                "value": "picto-like",
                "label": "Like",
                "group": "Shop"
              }, {
                "value": "picto-building",
                "label": "Building",
                "group": "Shop"
              }, {
                "value": "picto-love",
                "label": "Love",
                "group": "Shop"
              }, {
                "value": "picto-award-gift",
                "label": "Award gift",
                "group": "Shop"
              }, {
                "value": "picto-happy",
                "label": "Happy",
                "group": "Shop"
              }, {
                "value": "picto-box",
                "label": "Box",
                "group": "Shipping"
              }, {
                "value": "picto-pin",
                "label": "Pin",
                "group": "Shipping"
              }, {
                "value": "picto-timer",
                "label": "Timer",
                "group": "Shipping"
              }, {
                "value": "picto-validation",
                "label": "Validation",
                "group": "Shipping"
              }, {
                "value": "picto-truck",
                "label": "Truck",
                "group": "Shipping"
              }, {
                "value": "picto-return",
                "label": "Return",
                "group": "Shipping"
              }, {
                "value": "picto-earth",
                "label": "Earth",
                "group": "Shipping"
              }, {
                "value": "picto-plane",
                "label": "Plane",
                "group": "Shipping"
              }, {
                "value": "picto-credit-card",
                "label": "Credit card",
                "group": "Payment & Security"
              }, {
                "value": "picto-lock",
                "label": "Lock",
                "group": "Payment & Security"
              }, {
                "value": "picto-shield",
                "label": "Shield",
                "group": "Payment & Security"
              }, {
                "value": "picto-secure-profile",
                "label": "Secure profile",
                "group": "Payment & Security"
              }, {
                "value": "picto-money",
                "label": "Money",
                "group": "Payment & Security"
              }, {
                "value": "picto-recycle",
                "label": "Recycle",
                "group": "Ecology"
              }, {
                "value": "picto-leaf",
                "label": "Leaf",
                "group": "Ecology"
              }, {
                "value": "picto-tree",
                "label": "Tree",
                "group": "Ecology"
              }, {
                "value": "picto-mobile-phone",
                "label": "Mobile phone",
                "group": "Communication"
              }, {
                "value": "picto-phone",
                "label": "Phone",
                "group": "Communication"
              }, {
                "value": "picto-chat",
                "label": "Chat",
                "group": "Communication"
              }, {
                "value": "picto-customer-support",
                "label": "Customer support",
                "group": "Communication"
              }, {
                "value": "picto-operator",
                "label": "Operator",
                "group": "Communication"
              }, {
                "value": "picto-mailbox",
                "label": "Mailbox",
                "group": "Communication"
              }, {
                "value": "picto-envelope",
                "label": "Envelope",
                "group": "Communication"
              }, {
                "value": "picto-comment",
                "label": "Comment",
                "group": "Communication"
              }, {
                "value": "picto-question",
                "label": "Question",
                "group": "Communication"
              }, {
                "value": "picto-send",
                "label": "Send",
                "group": "Communication"
              }, {
                "value": "picto-at-sign",
                "label": "At sign",
                "group": "Tech"
              }, {
                "value": "picto-camera",
                "label": "Camera",
                "group": "Tech"
              }, {
                "value": "picto-wifi",
                "label": "WiFi",
                "group": "Tech"
              }, {
                "value": "picto-bluetooth",
                "label": "Bluetooth",
                "group": "Tech"
              }, {
                "value": "picto-printer",
                "label": "Printer",
                "group": "Tech"
              }, {
                "value": "picto-smart-watch",
                "label": "Smart watch",
                "group": "Tech"
              }, {
                "value": "picto-coffee",
                "label": "Coffee",
                "group": "Food & Drink"
              }, {
                "value": "picto-burger",
                "label": "Burger",
                "group": "Food & Drink"
              }, {
                "value": "picto-beer",
                "label": "Beer",
                "group": "Food & Drink"
              }, {
                "value": "picto-target",
                "label": "Target",
                "group": "Other"
              }, {
                "value": "picto-document",
                "label": "Document",
                "group": "Other"
              }, {
                "value": "picto-jewelry",
                "label": "Jewelry",
                "group": "Other"
              }, {
                "value": "picto-music",
                "label": "Music",
                "group": "Other"
              }, {
                "value": "picto-file",
                "label": "File",
                "group": "Other"
              }, {
                "value": "picto-mask",
                "label": "Mask",
                "group": "Other"
              }, {
                "value": "picto-stop",
                "label": "Stop",
                "group": "Other"
              }
            ],
            "default": "none"
          },
        {
          "type": "select",
          "id": "button_1_icon_reverse",
          "label": "Icon Position",
          "options": [
            {
              "value": "row",
              "label": "Left"
            },
            {
              "value": "row-reverse",
              "label": "Right"
            }
          ],
          "default": "row"
        },
        {
          "id": "button_1_border_radius",
          "label": "Border Radius",
          "type": "range",
          "min": 0,
          "max": 50,
          "step": 1,
          "default": 50,
          "unit": "px"
        },
        {
          "id": "button_1_border_width",
          "label": "Border Width",
          "type": "range",
          "min": 0,
          "max": 10,
          "step": 1,
          "default": 0,
          "unit": "px"
        },
        {
          "type": "header",
          "content": "Button 2 Settings",
          "info": "Customize the appearance and behavior of the second button."
        },
        {
          "type": "text",
          "id": "button_2_text",
          "label": "Text"
        },
        {
          "type": "url",
          "id": "button_2_link",
          "label": "Link",
          "info": "Leave the button text empty to make the slide fully clickable."
        },
        {
          "type": "header",
          "content": "Button 2 Colors",
          "info": "Define colors and gradients for normal and hover states."
        },
        {
          "type": "color",
          "id": "button_2_text_color",
          "label": "Text Color",
          "default": "#000000"
        },
        {
          "type": "color",
          "id": "button_2_text_color_hovered",
          "label": "Text Color (Hover)"
        },
        {
          "type": "color",
          "id": "button_2_background",
          "label": "Background Color",
          "default": "#fff000"
        },
        {
          "type": "color",
          "id": "button_2_background_hovered",
          "label": "Background Color (Hover)"
        },
        {
          "type": "color_background",
          "id": "button_2_background_gradient",
          "label": "Background Gradient"
        },
        {
          "type": "color_background",
          "id": "button_2_background_gradient_hovered",
          "label": "Background Gradient (Hover)"
        },
        {
          "type": "color",
          "id": "button_2_border_color",
          "label": "Border Color",
          "default": "#000000"
        },
        {
          "type": "color",
          "id": "button_2_border_color_hovered",
          "label": "Border Color (Hover)"
        },
        {
          "type": "header",
          "content": "Button 2 Styling",
          "info": "Adjust button appearance."
        },
        {
            "type": "select",
            "id": "icon2",
            "label": "Icon",
            "options": [
              {
                "value": "none",
                "label": "None"
              },
              {
                "value": "picto-coupon",
                "label": "Coupon",
                "group": "Shop"
              },
              {
                "value": "picto-percent",
                "label": "Percent",
                "group": "Shop"
              },
              {
                "value": "picto-gift",
                "label": "Gift",
                "group": "Shop"
              }, {
                "value": "picto-star",
                "label": "Star",
                "group": "Shop"
              }, {
                "value": "picto-like",
                "label": "Like",
                "group": "Shop"
              }, {
                "value": "picto-building",
                "label": "Building",
                "group": "Shop"
              }, {
                "value": "picto-love",
                "label": "Love",
                "group": "Shop"
              }, {
                "value": "picto-award-gift",
                "label": "Award gift",
                "group": "Shop"
              }, {
                "value": "picto-happy",
                "label": "Happy",
                "group": "Shop"
              }, {
                "value": "picto-box",
                "label": "Box",
                "group": "Shipping"
              }, {
                "value": "picto-pin",
                "label": "Pin",
                "group": "Shipping"
              }, {
                "value": "picto-timer",
                "label": "Timer",
                "group": "Shipping"
              }, {
                "value": "picto-validation",
                "label": "Validation",
                "group": "Shipping"
              }, {
                "value": "picto-truck",
                "label": "Truck",
                "group": "Shipping"
              }, {
                "value": "picto-return",
                "label": "Return",
                "group": "Shipping"
              }, {
                "value": "picto-earth",
                "label": "Earth",
                "group": "Shipping"
              }, {
                "value": "picto-plane",
                "label": "Plane",
                "group": "Shipping"
              }, {
                "value": "picto-credit-card",
                "label": "Credit card",
                "group": "Payment & Security"
              }, {
                "value": "picto-lock",
                "label": "Lock",
                "group": "Payment & Security"
              }, {
                "value": "picto-shield",
                "label": "Shield",
                "group": "Payment & Security"
              }, {
                "value": "picto-secure-profile",
                "label": "Secure profile",
                "group": "Payment & Security"
              }, {
                "value": "picto-money",
                "label": "Money",
                "group": "Payment & Security"
              }, {
                "value": "picto-recycle",
                "label": "Recycle",
                "group": "Ecology"
              }, {
                "value": "picto-leaf",
                "label": "Leaf",
                "group": "Ecology"
              }, {
                "value": "picto-tree",
                "label": "Tree",
                "group": "Ecology"
              }, {
                "value": "picto-mobile-phone",
                "label": "Mobile phone",
                "group": "Communication"
              }, {
                "value": "picto-phone",
                "label": "Phone",
                "group": "Communication"
              }, {
                "value": "picto-chat",
                "label": "Chat",
                "group": "Communication"
              }, {
                "value": "picto-customer-support",
                "label": "Customer support",
                "group": "Communication"
              }, {
                "value": "picto-operator",
                "label": "Operator",
                "group": "Communication"
              }, {
                "value": "picto-mailbox",
                "label": "Mailbox",
                "group": "Communication"
              }, {
                "value": "picto-envelope",
                "label": "Envelope",
                "group": "Communication"
              }, {
                "value": "picto-comment",
                "label": "Comment",
                "group": "Communication"
              }, {
                "value": "picto-question",
                "label": "Question",
                "group": "Communication"
              }, {
                "value": "picto-send",
                "label": "Send",
                "group": "Communication"
              }, {
                "value": "picto-at-sign",
                "label": "At sign",
                "group": "Tech"
              }, {
                "value": "picto-camera",
                "label": "Camera",
                "group": "Tech"
              }, {
                "value": "picto-wifi",
                "label": "WiFi",
                "group": "Tech"
              }, {
                "value": "picto-bluetooth",
                "label": "Bluetooth",
                "group": "Tech"
              }, {
                "value": "picto-printer",
                "label": "Printer",
                "group": "Tech"
              }, {
                "value": "picto-smart-watch",
                "label": "Smart watch",
                "group": "Tech"
              }, {
                "value": "picto-coffee",
                "label": "Coffee",
                "group": "Food & Drink"
              }, {
                "value": "picto-burger",
                "label": "Burger",
                "group": "Food & Drink"
              }, {
                "value": "picto-beer",
                "label": "Beer",
                "group": "Food & Drink"
              }, {
                "value": "picto-target",
                "label": "Target",
                "group": "Other"
              }, {
                "value": "picto-document",
                "label": "Document",
                "group": "Other"
              }, {
                "value": "picto-jewelry",
                "label": "Jewelry",
                "group": "Other"
              }, {
                "value": "picto-music",
                "label": "Music",
                "group": "Other"
              }, {
                "value": "picto-file",
                "label": "File",
                "group": "Other"
              }, {
                "value": "picto-mask",
                "label": "Mask",
                "group": "Other"
              }, {
                "value": "picto-stop",
                "label": "Stop",
                "group": "Other"
              }
            ],
            "default": "none"
          },
        {
          "type": "select",
          "id": "button_2_icon_reverse",
          "label": "Icon Position",
          "options": [
            {
              "value": "row",
              "label": "Left"
            },
            {
              "value": "row-reverse",
              "label": "Right"
            }
          ],
          "default": "row"
        },
        {
          "id": "button_2_border_radius",
          "label": "Border Radius",
          "type": "range",
          "min": 0,
          "max": 50,
          "step": 1,
          "default": 50,
          "unit": "px"
        },
        {
          "id": "button_2_border_width",
          "label": "Border Width",
          "type": "range",
          "min": 0,
          "max": 10,
          "step": 1,
          "default": 0,
          "unit": "px"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Slideshow",
      "blocks": [
       
      ]
    }
  ]
}
{% endschema %}